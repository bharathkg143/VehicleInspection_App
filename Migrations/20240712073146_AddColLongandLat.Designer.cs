// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VIR_WebApp.Data;

#nullable disable

namespace VIR_WebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240712073146_AddColLongandLat")]
    partial class AddColLongandLat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VIR_WebApp.Models.CustomerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("chassisNo")
                        .HasColumnType("longtext");

                    b.Property<string>("customerName")
                        .HasColumnType("longtext");

                    b.Property<long?>("customer_id")
                        .HasColumnType("bigint");

                    b.Property<string>("engineNo")
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("vehicleRegNo")
                        .HasColumnType("longtext");

                    b.Property<long?>("vehicle_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("customer_info");
                });

            modelBuilder.Entity("VIR_WebApp.Models.GeneratedOTPs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OTP")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("generated_otp");
                });

            modelBuilder.Entity("VIR_WebApp.Models.SMSInteraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InteractionDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .HasMaxLength(1500)
                        .HasColumnType("varchar(1500)");

                    b.Property<long?>("MobileNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("MsgStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("MsgType")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseFromGateway")
                        .HasColumnType("longtext");

                    b.Property<string>("SmsType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("sms_interaction");
                });

            modelBuilder.Entity("VIR_WebApp.Models.SMSTemplates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DealerName")
                        .HasColumnType("longtext");

                    b.Property<ulong?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceType")
                        .HasColumnType("longtext");

                    b.Property<string>("SmsApi")
                        .HasColumnType("longtext");

                    b.Property<string>("SmsTemplate")
                        .HasColumnType("longtext");

                    b.Property<string>("SmsType")
                        .HasColumnType("longtext");

                    b.Property<string>("TemplateId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("sms_template");
                });

            modelBuilder.Entity("VIR_WebApp.Models.VIRDocumentsUploads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChassisNo")
                        .HasColumnType("longtext");

                    b.Property<string>("ChassisNoLast6Digits")
                        .HasColumnType("longtext");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DocsUploadedLink")
                        .HasColumnType("longtext");

                    b.Property<string>("EngineNoLast6Digits")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_ChassisNo")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_Front90")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_FrontLeft45")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_FrontRight45")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_Left90")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_OdoMeterReading")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_OpenBonnet")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_OpenDickey")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_RCCopyBack")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_RCCopyFront")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_Rear90")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_RearLeft45")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_RearRight45")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_Right90")
                        .HasColumnType("longtext");

                    b.Property<string>("ImgUrl_UnderBodyFromFrontSide")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastUploadDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Latitude")
                        .HasColumnType("longtext");

                    b.Property<string>("Longitude")
                        .HasColumnType("longtext");

                    b.Property<long?>("OdoMeterReading")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ProcessName")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_ChassisNo")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_Front90")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_FrontLeft45")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_FrontRight45")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_Left90")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_OdoMeterReading")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_OpenBonnet")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_OpenDickey")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_RCCopyBack")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_RCCopyFront")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_Rear90")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_RearLeft45")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_RearRight45")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_Right90")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadDateTime_UnderBodyFromFrontSide")
                        .HasColumnType("longtext");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleRegNo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("vir_documents_uploads");
                });
#pragma warning restore 612, 618
        }
    }
}
